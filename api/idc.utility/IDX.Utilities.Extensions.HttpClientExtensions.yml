### YamlMime:ManagedReference
items:
- uid: IDX.Utilities.Extensions.HttpClientExtensions
  commentId: T:IDX.Utilities.Extensions.HttpClientExtensions
  id: HttpClientExtensions
  parent: IDX.Utilities.Extensions
  children:
  - IDX.Utilities.Extensions.HttpClientExtensions.AddAuthorization(System.Net.Http.HttpClient,System.String)
  - IDX.Utilities.Extensions.HttpClientExtensions.AsyncGet(System.Net.Http.HttpClient,System.String,System.String,System.Threading.CancellationToken)
  - IDX.Utilities.Extensions.HttpClientExtensions.AsyncPost(System.Net.Http.HttpClient,System.String,System.Net.Http.HttpContent,System.String,Newtonsoft.Json.Linq.JObject,System.Threading.CancellationToken)
  - IDX.Utilities.Extensions.HttpClientExtensions.SetDefault(System.Net.Http.HttpClient)
  langs:
  - csharp
  - vb
  name: HttpClientExtensions
  nameWithType: HttpClientExtensions
  fullName: IDX.Utilities.Extensions.HttpClientExtensions
  type: Class
  source:
    remote:
      path: Extensions/HttpClientExtensions.cs
      branch: Research_Documentation
      repo: https://scm.idecision.ai/idecision_source_net8/idc.utility.git
    id: HttpClientExtensions
    path: ../../../-Repo/idc.utility/Extensions/HttpClientExtensions.cs
    startLine: 9
  assemblies:
  - IDX.Utilities
  namespace: IDX.Utilities.Extensions
  summary: Provides extension methods for the <xref href="System.Net.Http.HttpClient" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public static class HttpClientExtensions
    content.vb: Public Module HttpClientExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: IDX.Utilities.Extensions.HttpClientExtensions.SetDefault(System.Net.Http.HttpClient)
  commentId: M:IDX.Utilities.Extensions.HttpClientExtensions.SetDefault(System.Net.Http.HttpClient)
  id: SetDefault(System.Net.Http.HttpClient)
  isExtensionMethod: true
  parent: IDX.Utilities.Extensions.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: SetDefault(HttpClient)
  nameWithType: HttpClientExtensions.SetDefault(HttpClient)
  fullName: IDX.Utilities.Extensions.HttpClientExtensions.SetDefault(System.Net.Http.HttpClient)
  type: Method
  source:
    remote:
      path: Extensions/HttpClientExtensions.cs
      branch: Research_Documentation
      repo: https://scm.idecision.ai/idecision_source_net8/idc.utility.git
    id: SetDefault
    path: ../../../-Repo/idc.utility/Extensions/HttpClientExtensions.cs
    startLine: 24
  assemblies:
  - IDX.Utilities
  namespace: IDX.Utilities.Extensions
  summary: Removes the "Authorization" header from the default request headers of the given <xref href="System.Net.Http.HttpClient" data-throw-if-not-resolved="false"></xref>.
  example:
  - >-
    <pre><code class="lang-csharp">using IDX.Utilities;


    var client = new HttpClient();

    client.SetDefault();</code></pre>
  syntax:
    content: public static void SetDefault(this HttpClient httpClient)
    parameters:
    - id: httpClient
      type: System.Net.Http.HttpClient
      description: The <xref href="System.Net.Http.HttpClient" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Shared Sub SetDefault(httpClient As HttpClient)
  overload: IDX.Utilities.Extensions.HttpClientExtensions.SetDefault*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when <code class="paramref">httpClient</code> is null.
- uid: IDX.Utilities.Extensions.HttpClientExtensions.AddAuthorization(System.Net.Http.HttpClient,System.String)
  commentId: M:IDX.Utilities.Extensions.HttpClientExtensions.AddAuthorization(System.Net.Http.HttpClient,System.String)
  id: AddAuthorization(System.Net.Http.HttpClient,System.String)
  isExtensionMethod: true
  parent: IDX.Utilities.Extensions.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: AddAuthorization(HttpClient, string)
  nameWithType: HttpClientExtensions.AddAuthorization(HttpClient, string)
  fullName: IDX.Utilities.Extensions.HttpClientExtensions.AddAuthorization(System.Net.Http.HttpClient, string)
  type: Method
  source:
    remote:
      path: Extensions/HttpClientExtensions.cs
      branch: Research_Documentation
      repo: https://scm.idecision.ai/idecision_source_net8/idc.utility.git
    id: AddAuthorization
    path: ../../../-Repo/idc.utility/Extensions/HttpClientExtensions.cs
    startLine: 41
  assemblies:
  - IDX.Utilities
  namespace: IDX.Utilities.Extensions
  summary: Adds the authorization header to the HttpClient.
  example:
  - >-
    <pre><code class="lang-csharp">using IDX.Utilities;


    var client = new HttpClient();

    client.AddAuthorization("Bearer myToken");</code></pre>
  syntax:
    content: public static void AddAuthorization(this HttpClient httpClient, string credential)
    parameters:
    - id: httpClient
      type: System.Net.Http.HttpClient
      description: The HttpClient instance.
    - id: credential
      type: System.String
      description: The authorization credential.
    content.vb: Public Shared Sub AddAuthorization(httpClient As HttpClient, credential As String)
  overload: IDX.Utilities.Extensions.HttpClientExtensions.AddAuthorization*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when httpClient is null.
  nameWithType.vb: HttpClientExtensions.AddAuthorization(HttpClient, String)
  fullName.vb: IDX.Utilities.Extensions.HttpClientExtensions.AddAuthorization(System.Net.Http.HttpClient, String)
  name.vb: AddAuthorization(HttpClient, String)
- uid: IDX.Utilities.Extensions.HttpClientExtensions.AsyncGet(System.Net.Http.HttpClient,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:IDX.Utilities.Extensions.HttpClientExtensions.AsyncGet(System.Net.Http.HttpClient,System.String,System.String,System.Threading.CancellationToken)
  id: AsyncGet(System.Net.Http.HttpClient,System.String,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: IDX.Utilities.Extensions.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: AsyncGet(HttpClient, string, string?, CancellationToken)
  nameWithType: HttpClientExtensions.AsyncGet(HttpClient, string, string?, CancellationToken)
  fullName: IDX.Utilities.Extensions.HttpClientExtensions.AsyncGet(System.Net.Http.HttpClient, string, string?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Extensions/HttpClientExtensions.cs
      branch: Research_Documentation
      repo: https://scm.idecision.ai/idecision_source_net8/idc.utility.git
    id: AsyncGet
    path: ../../../-Repo/idc.utility/Extensions/HttpClientExtensions.cs
    startLine: 69
  assemblies:
  - IDX.Utilities
  namespace: IDX.Utilities.Extensions
  summary: Sends an asynchronous HTTP GET request to the specified URL.
  example:
  - >-
    <pre><code class="lang-csharp">using IDX.Utilities;


    var client = new HttpClient();

    client.SetDefault();

    var response = await client.AsyncGet("https://api.example.com/data");

    response.EnsureSuccessStatusCode();


    var data = await response.Content.ReadAsStringAsync();

    Console.WriteLine(data);</code></pre>
  syntax:
    content: public static Task<HttpResponseMessage> AsyncGet(this HttpClient httpClient, string url, string? credential = null, CancellationToken cancellationToken = default)
    parameters:
    - id: httpClient
      type: System.Net.Http.HttpClient
      description: The HttpClient instance.
    - id: url
      type: System.String
      description: The URL to send the request to.
    - id: credential
      type: System.String
      description: The credential for authorization. Optional.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token to cancel the request. Optional.
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: A Task that represents the asynchronous GET operation.
    content.vb: Public Shared Function AsyncGet(httpClient As HttpClient, url As String, credential As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of HttpResponseMessage)
  overload: IDX.Utilities.Extensions.HttpClientExtensions.AsyncGet*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when httpClient or url is null.
  nameWithType.vb: HttpClientExtensions.AsyncGet(HttpClient, String, String, CancellationToken)
  fullName.vb: IDX.Utilities.Extensions.HttpClientExtensions.AsyncGet(System.Net.Http.HttpClient, String, String, System.Threading.CancellationToken)
  name.vb: AsyncGet(HttpClient, String, String, CancellationToken)
- uid: IDX.Utilities.Extensions.HttpClientExtensions.AsyncPost(System.Net.Http.HttpClient,System.String,System.Net.Http.HttpContent,System.String,Newtonsoft.Json.Linq.JObject,System.Threading.CancellationToken)
  commentId: M:IDX.Utilities.Extensions.HttpClientExtensions.AsyncPost(System.Net.Http.HttpClient,System.String,System.Net.Http.HttpContent,System.String,Newtonsoft.Json.Linq.JObject,System.Threading.CancellationToken)
  id: AsyncPost(System.Net.Http.HttpClient,System.String,System.Net.Http.HttpContent,System.String,Newtonsoft.Json.Linq.JObject,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: IDX.Utilities.Extensions.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: AsyncPost(HttpClient, string, HttpContent, string?, JObject?, CancellationToken)
  nameWithType: HttpClientExtensions.AsyncPost(HttpClient, string, HttpContent, string?, JObject?, CancellationToken)
  fullName: IDX.Utilities.Extensions.HttpClientExtensions.AsyncPost(System.Net.Http.HttpClient, string, System.Net.Http.HttpContent, string?, Newtonsoft.Json.Linq.JObject?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Extensions/HttpClientExtensions.cs
      branch: Research_Documentation
      repo: https://scm.idecision.ai/idecision_source_net8/idc.utility.git
    id: AsyncPost
    path: ../../../-Repo/idc.utility/Extensions/HttpClientExtensions.cs
    startLine: 106
  assemblies:
  - IDX.Utilities
  namespace: IDX.Utilities.Extensions
  summary: Sends an asynchronous HTTP POST request to the specified URL with the given content.
  example:
  - >-
    <pre><code class="lang-csharp">using IDX.Utilities;


    var client = new HttpClient();

    var content = new StringContent("Hello world", Encoding.UTF8, "text/plain");

    var response = await client.AsyncPost("https://api.example.com/upload", content, "Bearer myToken");

    response.EnsureSuccessStatusCode();


    var result = await response.Content.ReadAsStringAsync();

    Console.WriteLine(result);</code></pre>
  syntax:
    content: public static Task<HttpResponseMessage> AsyncPost(this HttpClient httpClient, string url, HttpContent content, string? credential = null, JObject? headers = null, CancellationToken cancellationToken = default)
    parameters:
    - id: httpClient
      type: System.Net.Http.HttpClient
      description: The HttpClient instance.
    - id: url
      type: System.String
      description: The URL to send the request to.
    - id: content
      type: System.Net.Http.HttpContent
      description: The content of the request.
    - id: credential
      type: System.String
      description: The optional credential to use for authorization.
    - id: headers
      type: Newtonsoft.Json.Linq.JObject
      description: The optional headers to include in the request.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The optional cancellation token.
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: A Task representing the asynchronous operation that returns an HttpResponseMessage.
    content.vb: Public Shared Function AsyncPost(httpClient As HttpClient, url As String, content As HttpContent, credential As String = Nothing, headers As JObject = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of HttpResponseMessage)
  overload: IDX.Utilities.Extensions.HttpClientExtensions.AsyncPost*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when httpClient or url is null.
  nameWithType.vb: HttpClientExtensions.AsyncPost(HttpClient, String, HttpContent, String, JObject, CancellationToken)
  fullName.vb: IDX.Utilities.Extensions.HttpClientExtensions.AsyncPost(System.Net.Http.HttpClient, String, System.Net.Http.HttpContent, String, Newtonsoft.Json.Linq.JObject, System.Threading.CancellationToken)
  name.vb: AsyncPost(HttpClient, String, HttpContent, String, JObject, CancellationToken)
references:
- uid: System.Net.Http.HttpClient
  commentId: T:System.Net.Http.HttpClient
  parent: System.Net.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.http.httpclient
  name: HttpClient
  nameWithType: HttpClient
  fullName: System.Net.Http.HttpClient
- uid: IDX.Utilities.Extensions
  commentId: N:IDX.Utilities.Extensions
  href: IDX.html
  name: IDX.Utilities.Extensions
  nameWithType: IDX.Utilities.Extensions
  fullName: IDX.Utilities.Extensions
  spec.csharp:
  - uid: IDX
    name: IDX
    href: IDX.html
  - name: .
  - uid: IDX.Utilities
    name: Utilities
    href: IDX.Utilities.html
  - name: .
  - uid: IDX.Utilities.Extensions
    name: Extensions
    href: IDX.Utilities.Extensions.html
  spec.vb:
  - uid: IDX
    name: IDX
    href: IDX.html
  - name: .
  - uid: IDX.Utilities
    name: Utilities
    href: IDX.Utilities.html
  - name: .
  - uid: IDX.Utilities.Extensions
    name: Extensions
    href: IDX.Utilities.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  - name: .
  - uid: System.Net.Http
    name: Http
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  - name: .
  - uid: System.Net.Http
    name: Http
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: IDX.Utilities.Extensions.HttpClientExtensions.SetDefault*
  commentId: Overload:IDX.Utilities.Extensions.HttpClientExtensions.SetDefault
  href: IDX.Utilities.Extensions.HttpClientExtensions.SetDefault.html#IDX_Utilities_Extensions_HttpClientExtensions_SetDefault_System_Net_Http_HttpClient_
  name: SetDefault
  nameWithType: HttpClientExtensions.SetDefault
  fullName: IDX.Utilities.Extensions.HttpClientExtensions.SetDefault
- uid: IDX.Utilities.Extensions.HttpClientExtensions.AddAuthorization*
  commentId: Overload:IDX.Utilities.Extensions.HttpClientExtensions.AddAuthorization
  href: IDX.Utilities.Extensions.HttpClientExtensions.AddAuthorization.html#IDX_Utilities_Extensions_HttpClientExtensions_AddAuthorization_System_Net_Http_HttpClient_System_String_
  name: AddAuthorization
  nameWithType: HttpClientExtensions.AddAuthorization
  fullName: IDX.Utilities.Extensions.HttpClientExtensions.AddAuthorization
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: IDX.Utilities.Extensions.HttpClientExtensions.AsyncGet*
  commentId: Overload:IDX.Utilities.Extensions.HttpClientExtensions.AsyncGet
  href: IDX.Utilities.Extensions.HttpClientExtensions.AsyncGet.html#IDX_Utilities_Extensions_HttpClientExtensions_AsyncGet_System_Net_Http_HttpClient_System_String_System_String_System_Threading_CancellationToken_
  name: AsyncGet
  nameWithType: HttpClientExtensions.AsyncGet
  fullName: IDX.Utilities.Extensions.HttpClientExtensions.AsyncGet
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
  commentId: T:System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<HttpResponseMessage>
  nameWithType: Task<HttpResponseMessage>
  fullName: System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage>
  nameWithType.vb: Task(Of HttpResponseMessage)
  fullName.vb: System.Threading.Tasks.Task(Of System.Net.Http.HttpResponseMessage)
  name.vb: Task(Of HttpResponseMessage)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http.httpresponsemessage
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http.httpresponsemessage
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: IDX.Utilities.Extensions.HttpClientExtensions.AsyncPost*
  commentId: Overload:IDX.Utilities.Extensions.HttpClientExtensions.AsyncPost
  href: IDX.Utilities.Extensions.HttpClientExtensions.AsyncPost.html#IDX_Utilities_Extensions_HttpClientExtensions_AsyncPost_System_Net_Http_HttpClient_System_String_System_Net_Http_HttpContent_System_String_Newtonsoft_Json_Linq_JObject_System_Threading_CancellationToken_
  name: AsyncPost
  nameWithType: HttpClientExtensions.AsyncPost
  fullName: IDX.Utilities.Extensions.HttpClientExtensions.AsyncPost
- uid: System.Net.Http.HttpContent
  commentId: T:System.Net.Http.HttpContent
  parent: System.Net.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.http.httpcontent
  name: HttpContent
  nameWithType: HttpContent
  fullName: System.Net.Http.HttpContent
- uid: Newtonsoft.Json.Linq.JObject
  commentId: T:Newtonsoft.Json.Linq.JObject
  parent: Newtonsoft.Json.Linq
  isExternal: true
  name: JObject
  nameWithType: JObject
  fullName: Newtonsoft.Json.Linq.JObject
- uid: Newtonsoft.Json.Linq
  commentId: N:Newtonsoft.Json.Linq
  isExternal: true
  name: Newtonsoft.Json.Linq
  nameWithType: Newtonsoft.Json.Linq
  fullName: Newtonsoft.Json.Linq
  spec.csharp:
  - uid: Newtonsoft
    name: Newtonsoft
    isExternal: true
  - name: .
  - uid: Newtonsoft.Json
    name: Json
    isExternal: true
  - name: .
  - uid: Newtonsoft.Json.Linq
    name: Linq
    isExternal: true
  spec.vb:
  - uid: Newtonsoft
    name: Newtonsoft
    isExternal: true
  - name: .
  - uid: Newtonsoft.Json
    name: Json
    isExternal: true
  - name: .
  - uid: Newtonsoft.Json.Linq
    name: Linq
    isExternal: true
memberLayout: SeparatePages
